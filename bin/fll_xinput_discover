#!/usr/bin/perl

use warnings;
use strict;

use Switch 'Perl6';

my %input;
my @input_devices;
my ($name, $device, $phys, $mouse);

open(INPUT, '<', '/proc/bus/input/devices')
	or die "Unable to read '/proc/bus/input/devices': $!\n";
while (<INPUT>) {
	chomp;
	
	unless (/^./) {
		($name, $device, $phys, $mouse) = ();
		next;
	}
	
	my ($key, $val) = split '=';
	($key and $val) or next;

	$key =~ s/^\w:\s+//;

	given (lc($key)) { 
		when 'name' {
			$name = $val;
		}
		when 'handlers' {
			$val =~ /mouse(\d+)/ and $mouse = $1;
		}
		when 'phys' {
			$phys = $val;
		}
	}

	next unless (defined $mouse and $name and $phys);

	$device = '/dev/input/mice';

	given ($phys) {
		when m/^isa/ {
			given ($name) {
				when m/SynPS\/2/ {
					$phys = 'synaptics';
					$device = '/dev/psaux';
				}
				when m/AlpsPS\/2/ {
					$phys = 'alps';
					$device = '/dev/psaux';
				}
				default {
					$phys = 'ps2';
				}
			}
		}
		when m/^usb/ { 
			$phys = 'usb';
		}
	}
	
	$input{$mouse} = {
		'name' => $name,
		'type' => $phys,
		'device' => $device
	};

	($name, $phys, $mouse) = ();
}
close(INPUT);

if (not $input_devices[1] and -x '/usr/sbin/hwinfo') {
	open(HWINFO, '-|', '/usr/sbin/hwinfo --mouse --short')
		or die("Unable to execute hwinfo --mouse: $!\n");
	while (<HWINFO>) {
		chomp;
		($name, $device) = ();
		if (m|^\s*(/dev/tty.+)\s+(.+)$|) {
			$device = $1 if -c $1;
			$name = $2;
			if ($name and $device) {
				$mouse++;
				$input{$mouse} = {
					'name' => $name,
					'type' => 'serial',
					'device' => $device
				};
			}
		}
	}
	close(HWINFO);
}			

for my $key (sort keys %input) {
	push @input_devices, '--input';
	for ('name', 'type', 'device') {
		push @input_devices, $_ . '=' . $input{$key}->{$_},
	}
}

print "XINPUT='@input_devices'\n";
