#!/bin/dash

### BEGIN INIT INFO
# Provides:          fll-hwsetup
# Required-Start:    $all
# Required-Stop:
# Default-Start:     S
# Default-Stop:
# Short-Description: fll hwsetup init service
# Description:       The purpose of this script is to invoke hwsetup to
#                    facilitate various hardware detection routines.
### END INIT INFO

###
# F.U.L.L.S.T.O.R.Y init script
#
# Copyright: (C) 2007 - 2008 Kel Modderman <kel@otaku42.de>
# License:   GPLv2
#
# F.U.L.L.S.T.O.R.Y Project Homepage:
# http://developer.berlios.de/projects/fullstory
###

PATH=/sbin:/usr/sbin:/bin:/usr/bin
NAME="fll-hwsetup"

###
# source distro-defaults, no-op unless in live mode
###
FLL_DISTRO_MODE="installed"

if [ -s /etc/default/distro ]; then
	. /etc/default/distro
fi

if [ "${FLL_DISTRO_MODE}" != "live" ]; then
	exit 0
fi

###
# VERBOSE setting and other rcS variables
###
#. /lib/init/vars.sh

###
# source lsb functions
###
. /lib/lsb/init-functions

###
# cheatcode handling
###
if [ -f /proc/cmdline ]; then
	for param in $(cat /proc/cmdline); do
		case "${param}" in
			flldebug=*)
				[ "${param#flldebug=}" = "${NAME#fll-}" ] && set -x
				;;
		esac
	done
fi

###
# functions...
###
do_start() {
	###
	# don't start gpm if a mouse device is not present
	###
	if [ ! -c /dev/input/mice ]; then
		update-rc.d -f gpm remove >/dev/null 2>&1
	fi

	# we don't depend on hwinfo, return if it is not installed
	which hwinfo >/dev/null || return 0

	###
	# bluetooth management
	###
	BLUETOOTH=$(hwinfo --bluetooth --short | sed -n '/^[a-z]\+:/!s/[ \t]\+//p' | head -n1)
	if [ "${BLUETOOTH}" ]; then
		log_daemon_msg "${NAME}" "detected bluetooth"
		log_end_msg 0
	else
		update-rc.d -f bluetooth remove >/dev/null 2>&1
	fi

	###
	# printer management
	###
	PRINTER=$(hwinfo --printer --short | sed -n '/^[a-z]\+:/!s/[ \t]\+//p' | head -n1)
	if [ "${PRINTER}" ]; then
		log_daemon_msg "${NAME}" "printer is '${PRINTER}'"
		log_end_msg 0
	else
		update-rc.d -f cupsys remove >/dev/null 2>&1
	fi
}

case "${1}" in
	start)
		do_start
		;;
	stop)
		;;
	restart|force-reload)
		echo "Error: argument '${1}' not supported" >&2
		exit 3
		;;
	*)
		echo "Usage: ${NAME} {start|stop}" >&2
		exit 3
		;;
esac

:
