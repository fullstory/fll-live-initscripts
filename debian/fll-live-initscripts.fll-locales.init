#!/bin/sh

### BEGIN INIT INFO
# Provides:          fll-locales
# Required-Start:    mountdevsubfs
# Required-Stop:
# X-Start-Before:    keymap keyboard-setup
# Default-Start:     S
# Default-Stop:
# Short-Description: live media locale autoconfigurator
# Description:       The purpose of fll-locales is to calculate required
#                    strings to configure the locale settings of system
#                    according to given lang= string.
### END INIT INFO

###
# F.U.L.L.S.T.O.R.Y init script
#
# Copyright: (C) 2007 - 2008 Kel Modderman <kel@otaku42.de>
#            (C) 2008 Michael Deelwater <michael.deelwater@googlemail.com>
# License:   GPLv2
#
# F.U.L.L.S.T.O.R.Y Project Homepage:
# http://developer.berlios.de/projects/fullstory
###

PATH=/sbin:/usr/sbin:/bin:/usr/bin
NAME="fll-locales"

if [ "${1}" = "list" ]; then
	sed -n 's![ \t]\+\([a-z-]\+\)|\?\([a-z]\+\)\?).*### [A-Z][A-Z] \(.\+\) kb:\(.\+\) ###!\1, \3,\4!p' "${0}"
	exit 0
fi

###
# source distro-defaults, no-op unless in live mode
###
FLL_DISTRO_MODE="installed"

if [ -s /etc/default/distro ]; then
	. /etc/default/distro
fi

if [ "${FLL_DISTRO_MODE}" != "live" ]; then
	[ -n "${FLL_LANG}" ] || exit 0
fi

###
# VERBOSE setting and other rcS variables
###
#. /lib/init/vars.sh

###
# source lsb functions
###
. /lib/lsb/init-functions

###
# source fll functions
###
. /lib/init/fll

###
# some console-setup defaults
###
CHARMAP="UTF-8"
CODESET="Uni2"
# Debian agrees that Terminus doesn't look great enough to be default
# http://bugs.debian.org/497331
FONTFACE="VGA"
# Keep the default size of 16 here to avoid clearing VT 1/2 way through
# bootup sequence
FONTSIZE="16"

###
# some keyboard-configuration defaults
###
XKBMODEL=""
XKBLAYOUT="us"
XKBVARIANT=""
XKBOPTIONS="lv3:ralt_switch,compose:lwin,grp:alt_shift_toggle"

###
# cheatcode handling
###
if [ -f /proc/cmdline ]; then
	for param in $(cat /proc/cmdline); do
		case "${param}" in
			flldebug=*)
				if [ "${param#flldebug=}" = "${NAME#fll-}" ] || [ "${param#flldebug=}" = "all" ]; then
					fll_redirect
				fi
				;;
			lang=*)
				LANGUAGE=$(awk 'BEGIN{ print tolower("'"${param#lang=}"'") }')
				;;
			utc=yes)
				UTC="yes"
				;;
			utc|gmt)
				CUSTOM_TZ="Etc/UTC"
				;;
			tz=*)
				CUSTOM_TZ="${param#tz=}"
				;;
			noaptlang)
				NOAPTLANG="yes"
				;;
			image_dir=*)
				FLL_IMAGE_DIR="${param#image_dir=}"
				FLL_IMAGE_LOCATION="${FLL_IMAGE_DIR}/${FLL_IMAGE_FILE}"
				;;
			image_name=*)
				FLL_IMAGE_FILE="${param#image_name=}"
				FLL_IMAGE_LOCATION="${FLL_IMAGE_DIR}/${FLL_IMAGE_FILE}"
				;;
			xkboptions=*)
				FLL_XKBOPTIONS="${param#xkboptions=}"
				;;
		esac
	done
fi

###
# allow FLL_LANG environment variable to trump
###
if [ -n "${FLL_LANG}" ]; then
	LANGUAGE="${FLL_LANG}"
fi

###
# lang cheatcode can optionally be made of two dash-separated parts ll-cc
# ll -> language code
# cc -> demographic code
###
LANG_CODE=${LANGUAGE%%[-_]*}
DEMO_CODE=${LANGUAGE##*[-_]}

###
# language, timezone and keyboard related locale settings
# (good reference: http://www.debian.org/mirror/list)
###
case "${LANG_CODE}" in
#	ar)	LANG="es_AR.UTF-8" ;; # locale not generated
	au)	LANG="en_AU.UTF-8" ;;
	be)	LANG="be_BY.UTF-8" ;;
	bg)	LANG="bg_BG.UTF-8" ;;
	br)
		case "${DEMO_CODE}" in
#			fr)	LANG="br_FR.UTF-8" ;; # locale not generated
			*)	LANG="pt_BR.UTF-8" ;;
		esac
		;;
#	ca)	LANG="en_CA.UTF-8" ;; # locale not generated
	ch)	LANG="de_CH.UTF-8" ;;
#	cl)	LANG="es_CL.UTF-8" ;; # locale not generated
	cn)	LANG="zh_CN.UTF-8" ;;
#	cy)	LANG="cy_GB.UTF-8" ;; # locale not generated
	cz|cs)	LANG="cs_CZ.UTF-8" ;;
	de)
		case "${DEMO_CODE}" in
			ch)	LANG="de_CH.UTF-8" ;;
			*)	LANG="de_DE.UTF-8" ;;
		esac
		;;
	dk|da)	LANG="da_DK.UTF-8" ;;
	en)
		case "${DEMO_CODE}" in
			au)	LANG="en_AU.UTF-8" ;;
#			ca)	LANG="en_CA.UTF-8" ;; # locale not generated
			gb|uk)	LANG="en_GB.UTF-8" ;;
			ie)	LANG="en_IE.UTF-8" ;;
			*)	LANG="en_US.UTF-8" ;;
		esac
		;;
	es)
		case "${DEMO_CODE}" in
#			ar)	LANG="es_AR.UTF-8" ;; # locale not generated
#			cl)	LANG="es_CL.UTF-8" ;; # locale not generated
			*)	LANG="es_ES.UTF-8" ;;
		esac
		;;
	fi)	LANG="fi_FI.UTF-8" ;;
	fr)
		case "${DEMO_CODE}" in
#			ca)	LANG="fr_CA.UTF-8" ;; # locale not generated
			be)	LANG="fr_BE.UTF-8" ;;
			*)	LANG="fr_FR.UTF-8" ;;
		esac
		;;
	gr|el)	LANG="el_GR.UTF-8" ;;
	gb|uk)	LANG="en_GB.UTF-8" ;;
	il|he)	LANG="he_IL.UTF-8" ;;
	hr) 	LANG="hr_HR.UTF-8" ;;
	ie)	LANG="en_IE.UTF-8" ;;
	ga)	LANG="ga_IE.UTF-8" ;;
#	gd)	LANG="gd_GB.UTF-8" ;; # locale not generated
#	gv)	LANG="gv_GB.UTF-8" ;; # locale not generated
	hu)	LANG="hu_HU.UTF-8" ;;
	it)	LANG="it_IT.UTF-8" ;;
	jp|ja)	LANG="ja_JP.UTF-8" ;;
	ko|kr)	LANG="ko_KR.UTF-8" ;;
#	kw)	LANG="kw_GB.UTF-8" ;; # locale not generated
	nb)	LANG="nb_NO.UTF-8" ;;
	nl)
		case "${DEMO_CODE}" in
			be)	LANG="nl_BE.UTF-8" ;;
			*)	LANG="nl_NL.UTF-8" ;;
		esac
		;;
	nn|no)	LANG="nn_NO.UTF-8" ;;
	pl)	LANG="pl_PL.UTF-8" ;;
	pt)
		case "${DEMO_CODE}" in
			pt)	LANG="pt_PT.UTF-8" ;;
			*)	LANG="pt_BR.UTF-8" ;;
		esac
		;;
	ro)	LANG="ro_RO.UTF-8" ;;
	ru)	LANG="ru_RU.UTF-8" ;;
	si|sl)	LANG="sl_SI.UTF-8" ;;
	sk)	LANG="sk_SK.UTF-8" ;;
	sv)	LANG="sv_SE.UTF-8" ;;
	tr)	LANG="tr_TR.UTF-8" ;;
	tw)	LANG="zh_TW.UTF-8" ;;
	us)	LANG="en_US.UTF-8" ;;
	zh)
		case "${DEMO_CODE}" in
			tw)	LANG="zh_TW.UTF-8" ;;
			*)	LANG="zh_CN.UTF-8" ;;
		esac
		;;
	*)	LANG="en_US.UTF-8" ;;
esac

###
# if demographic code was ommitted, extract default demo_code from LANG
###
if [ -z "${DEMO_CODE}" ]; then
	LANG_CHECK="${LANG%%.*}"
	DEMO_CODE="${LANG_CHECK##*_}"
fi

###
# country/territory-related locale settings
###
case "${DEMO_CODE}" in
	au)	### AU Australia kb:us ###
		XKBLAYOUT="us"
		TZ="Australia/Sydney"
		MIRROR="mirror.linux.org.au"
		;;
	be) 	### BE Belgium kb:be ###
		XKBLAYOUT="be,fr,us"
		TZ="Europe/Brussels"
		MIRROR="ftp.belnet.be"
		;;
	bg)	### BG Bulgaria kb:bg ###
		XKBLAYOUT="bg,us"
		TZ="Europe/Sofia"
		MIRROR="ftp.bg.debian.org"
		;;
	br)	### BR Brazil kb:br ###
		XKBLAYOUT="br,us"
		TZ="America/Sao_Paulo"
		MIRROR="ftp.br.debian.org"
		;;
	by)	### BY Belarus kb:by ###
		XKBLAYOUT="by,us"
		TZ="Europe/Minsk"
		MIRROR="linux.org.by"
		;;
	ca)	### CA Canadian kb:us ###
		case "${LANG_CODE}" in
			en)	XKBLAYOUT="us,ca" ;;
			fr)	XKBLAYOUT="ca,us" ;;
		esac
		TZ="America/Toronto"
		MIRROR="ftp.ca.debian.org"
		;;
	ch)	### CH Switzerland kb:ch ###
		# The de variant seems to be identical with the German layouts. Some Swiss users
		# were missing a correct layout. The fr variant seems to be the standard Swiss one.
		XKBLAYOUT="ch,us"
		XKBVARIANT="fr"
		TZ="Europe/Zurich"
		MIRROR="ftp.ch.debian.org"
		;;
	cn)	### CN Chinese (Simplified) kb:us ###
		XKBLAYOUT="us"
		TZ="Asia/Shanghai"
		MIRROR="ftp.hk.debian.org" # no primary mirror
		;;
	cz|cs)	### CZ CzechRepublic kb:cs ###
		XKBLAYOUT="cs,us"
		TZ="Europe/Prague"
		MIRROR="ftp.cz.debian.org"
		;;
	de)	### DE Germany kb:de ###
		XKBLAYOUT="de,us"
		TZ="Europe/Berlin"
		MIRROR="ftp.de.debian.org"
		;;
	dk|da)	### DK Denmark kb:dk ###
		XKBLAYOUT="dk,us"
		TZ="Europe/Copenhagen"
		MIRROR="ftp.dk.debian.org"
		;;
	es)	### ES Spain kb:es ###
		XKBLAYOUT="es,us"
		TZ="Europe/Madrid"
		MIRROR="ftp.es.debian.org"
		;;
	fi)	### FI Finland kb:fi ### 
		XKBLAYOUT="fi,us"
		TZ="Europe/Helsinki"
		MIRROR="ftp.fi.debian.org"
		;;
	fr)	### FR France kb:fr ###
		XKBLAYOUT="fr,us"
		TZ="Europe/Paris"
		MIRROR="ftp.fr.debian.org"
		;;
	gr|el)	### GR Greece kb:gr ###
		XKBLAYOUT="gr,us"
		TZ="Europe/Athens"
		MIRROR="ftp.es.debian.org" # no primary mirror
		;;
	gb|uk)	### GB GreatBritain kb:gb ###
		XKBLAYOUT="gb,us"
		TZ="Europe/London"
		MIRROR="ftp.uk.debian.org"
		;;
	il|he)	### IL Israel (Hebrew) kb:il ###
		XKBLAYOUT="il,us"
		TZ="Asia/Jerusalem"
		MIRROR="ftp.us.debian.org"
		;;
	hr) 	### HR Croatia kb:hr ###
		XKBLAYOUT="hr,us"
		TZ="Europe/Zagreb" 
		MIRROR="ftp.hr.debian.org" # no primary mirror
		;;
	ie)	### IE Ireland kb:ie ###
		XKBLAYOUT="ie,gb,us"
		TZ="Europe/Dublin"
		MIRROR="ftp.ie.debian.org"
		;;
	it)	### IT Italy kb:it ###
		XKBLAYOUT="it,us"
		TZ="Europe/Rome"
		MIRROR="ftp.it.debian.org"
		;;
	jp|ja)	### JP Japanese (Limited) kb:jp ###
		XKBLAYOUT="jp,us"
		TZ="Asia/Tokyo"
		MIRROR="ftp.jp.debian.org"
		;;
	ko|kr)	### KR Korean kb:kr ###
		XKBLAYOUT="kr,us"
		TZ="Asia/Seoul"
		MIRROR="ftp.kr.debian.org"
		;;
	nl)	### NL Netherlands kb:nl ###
		XKBLAYOUT="us,nl"
		TZ="Europe/Amsterdam"
		MIRROR="ftp.nl.debian.org"
		;;
	no)	### NO Norway kb:no ###
		XKBLAYOUT="no,us"
		TZ="Europe/Oslo"
		MIRROR="ftp.no.debian.org"
		;;
	pl)	### PL Poland kb:pl ###
		XKBLAYOUT="pl,us"
		TZ="Europe/Warsaw"
		MIRROR="ftp.pl.debian.org"
		;;
	pt)	### PT Portugal kb:pt ###
		XKBLAYOUT="pt,us"
		TZ="Europe/Lisbon"
		MIRROR="ftp.pt.debian.org"
		;;
	ro)	### RO Romania kb:ro ###
		XKBLAYOUT="ro,us"
		TZ="Europe/Bucharest"
		MIRROR="ftp.ro.debian.org"
		;;
	ru)	### RU Russia kb:ru ###
		XKBLAYOUT="ru,us"
		TZ="Europe/Moscow"
		MIRROR="ftp.ru.debian.org"
		;;
	se)     ### SE Sweden kb:se ###
		XKBLAYOUT="se,us"
		TZ="Europe/Stockholm"
		MIRROR="ftp.se.debian.org"
		;;
	si|sl)	### SI Slovenia kb:si ###
		XKBLAYOUT="si,us"
		TZ="Europe/Ljubljana"
		#CONSOLEFONT="iso02g"
		MIRROR="ftp.si.debian.org"
		;;
	sk)	### SK Slovakia kb:sk ###
		XKBLAYOUT="sk,us"
		TZ="Europe/Bratislava"
		MIRROR="ftp.sk.debian.org"
		;;
	tr)	### TR Turkey kb:tr ###
		XKBLAYOUT="tr,us"
		TZ="Europe/Istanbul"
		MIRROR="ftp.tr.debian.org"
		;;
	tw)	### TW Taiwan (TraditionalChinese) kb:us ###
		XKBLAYOUT="us"
		TZ="Asia/Taipei"
		MIRROR="ftp.tw.debian.org"
		;;
	us|*)	### US UnitedStates kb:us ###
		XKBLAYOUT="us,ca"
		TZ="America/New_York"
		MIRROR="ftp.us.debian.org"
		;;
esac

###
# allow CUSTOM_TZ to override above TZ definitions
###
if [ -n "${CUSTOM_TZ}" ]; then
	case "${CUSTOM_TZ}" in
		utc|UTC)
			CUSTOM_TZ="Etc/UTC"
			;;
	esac
	[ -f "/usr/share/zoneinfo/${CUSTOM_TZ}" ] && TZ="${CUSTOM_TZ}"
fi

set_timezone()
{
	###
	# configure timezone, fallback to UTC
	###
	[ -f "/usr/share/zoneinfo/${TZ}" ] || TZ="Etc/UTC"
	log_daemon_msg "${NAME}"; log_action_begin_msg " configuring timezone data for '${TZ}'"
	echo "${TZ}" > /etc/timezone
	rm -f /etc/localtime && cp -f "/usr/share/zoneinfo/${TZ}" /etc/localtime
	log_end_msg "${?}"

	###
	# hack rcS, make localtime default, unless tz=Etc/UTC or utc=yes
	###
	if [ "${TZ}" = "Etc/UTC" ] || [ "${UTC}" = "yes" ]; then
		[ -w /etc/default/rcS ] && sed -i 's/^UTC=.*/UTC=yes/' /etc/default/rcS
	else
		# debian defaults to UTC=yes, which is rumored to be dual-boot unfriendly
		[ -w /etc/default/rcS ] && sed -i 's/^UTC=.*/UTC=no/' /etc/default/rcS
		# update the system clock a'la /lib/udev/rules.d/85-hwclock.rules
		/sbin/hwclock --rtc=dev/rtc0 --systz --localtime --noadjfile
	fi

}

set_locale()
{
	###
	# select default locale and configure console-data via debconf
	###
	log_daemon_msg "${NAME}"; log_action_begin_msg " configuring locales for '${LANG}'"

	echo "locales locales/default_environment_locale select ${LANG}" | \
		debconf-set-selections
	update-locale "LANG=${LANG}"

	log_end_msg "${?}"
}

set_console()
{
	# write configuration: console-setup
 	cat > /etc/default/console-setup <<EOF
ACTIVE_CONSOLES="/dev/tty[1-6]"
CHARMAP="${CHARMAP}"
CODESET="${CODESET}"
FONTFACE="${FONTFACE}"
FONTSIZE="${FONTSIZE}"
EOF

	# write configuration: keyboard-configuration
	# if multiple layouts are given in XKBLAYOUT, the user can switch between
	# them with the toggle combination defined in XKBOPTIONS
	# FIXME: investigate debconfsettings!
	sed -i	-e "s/^\(XKBMODEL\=\).*/\1\"${XKBMODEL}\"/" \
		-e "s/^\(XKBLAYOUT\=\).*/\1\"${XKBLAYOUT}\"/" \
		-e "s/^\(XKBVARIANT\=\).*/\1\"${XKBVARIANT}\"/" \
		-e "s/^\(XKBOPTIONS\=\).*/\1\"${XKBOPTIONS}\"/" \
			/etc/default/keyboard

	setupcon --save-only
}

apt_install_lang() {
	###
	# install debs for lang from deb archive on cd
	###
	if [ -n "$NOAPTLANG" ]; then
		return
	fi

	LIVEAPT="$(fll_get_mnt)/i18n"
	if [ ! -d "${LIVEAPT}" ]; then
		return
	fi

	APTARCH=$(dpkg --print-architecture)
	# e.g. try /fll/sr0/i18n/i386/de_AT then the first de_* found
	if [ -f "${LIVEAPT}/${APTARCH}/${LANG%%[.]*}" ]; then
		# we have the variant requested
		LANGPACKS=$(cat "${LIVEAPT}/${APTARCH}/${LANG%%[.]*}")
	elif [ "${LANG%%[_]*}" != 'en' ]; then
		for lf in ${LIVEAPT}/${APTARCH}/${LANG%[_]*}*; do
			if [ -f "${lf}" ]; then
				# we have a file for the language
				LANGPACKS=$(cat "${lf}")
				break
			fi
		done
		[ -z "${LANGPACKS}" ] && return
	else
		# it's english and we don't have the variant requested
		return
	fi

	log_daemon_msg "${NAME}"
	log_action_begin_msg " installing language packages for '${LANG}'"

	# don't touch apt if it has been used
	if [ "/var/lib/dpkg/status" -nt "$(fll_get_mnt)/${FLL_IMAGE_LOCATION}" ]; then
		log_failure_msg " dpkg already updated"
		return
	fi

	LIVEAPTSOURCES=$(mktemp -d -t liveapt.XXXXXX)
	APTGETBASE="apt-get -o Dir::Etc=$LIVEAPTSOURCES"
	echo 'deb file://'${LIVEAPT}' sid main' > ${LIVEAPTSOURCES}/sources.list
	if ! ${APTGETBASE} update > /dev/null; then
		log_failure_msg " apt-get update for i18n packages from cd failed"
		apt_install_lang_clean
		return
	fi

	APTGETBASE="${APTGETBASE} --allow-unauthenticated --assume-yes --no-remove"

	# do a dry-run to calculate size of packages and that will be used
	APTUSESRAW=$(LANG=C ${APTGETBASE} --print-uris install ${LANGPACKS} | \
		awk '/^After\ this\ operation\,\ /{print $4}')
	APTUSES=${APTUSESRAW%%[.]*MB}
	APTUSES=$(echo $APTUSESRAW | sed 's|MB$||;')

	# lets assume it is <MB and ok if it's not in MB
	if [ "${APTUSES}" != "${APTUSESRAW}" ]; then
		APTUSES=$(echo $APTUSES | sed 's|\.[0-9]*$||;')
		# get a free memory figure
		FREEMEM=$(LANG=C free -m | awk '/\-\/\+\ buffers/{print $4}')
		# check free - used > minspace (256M)
		MEMAFTER=$(( ${FREEMEM} - ${APTUSES} ))
		if [ ${MEMAFTER} -lt 256 ]; then
			log_warning_msg " minimum 256MB free ram needed for i18n packages"
			log_warning_msg " you would only have ${MEMAFTER}MB free, not installing"
			apt_install_lang_clean
			return
		fi
		# check used/free > minratio
		USESRATIO=$(( ${FREEMEM} / ${APTUSES} ))
		if [ ${USESRATIO} -lt 5 ]; then
			log_warning_msg " i18n packages would use (${APTUSES}MB) more then 20% of available memory (${FREEMEM}MB), not installing."
			apt_install_lang_clean
			return
		fi
	fi

	# install the packages
	${APTGETBASE} install ${LANGPACKS} > /dev/null
	# clean up
	apt_install_lang_clean
}

apt_install_lang_clean() {
	echo '' > ${LIVEAPTSOURCES}/sources.list
	apt-get -o Dir::Etc=$LIVEAPTSOURCES update > /dev/null
	apt-get -o Dir::Etc=$LIVEAPTSOURCES clean > /dev/null
	rm -rf ${LIVEAPTSOURCES}
	log_end_msg "${?}"
}

localize_sources_list() {
	###
	# localise /etc/apt/sources.list
	###
	if [ -n "${MIRROR}" ] && [ -f /etc/apt/sources.list ]; then
		sed -i 's|/ftp\.\(..\.\)\?debian\.org/|/'"${MIRROR}"'/|' \
			/etc/apt/sources.list \
			/etc/apt/sources.list.d/debian.list
	fi

	# deploy load balancing for first generation sidux push mirrors
	if [ -w /etc/apt/sources.list.d/sidux.list ]; then
		case "$(mawk 'BEGIN{print int(8 * rand())}')" in
			0)
				# sidux.com
				FLL_MIRROR="http://sidux.com/debian/"
				;;
			1)
				# sidux.net
				FLL_MIRROR="http://sidux.net/debian/"
				;;
			3|4)
				# debian.tu-bs.de
				FLL_MIRROR="http://debian.tu-bs.de/project/sidux/debian/"
				;;
			5|6)
				# sidux.office-vienna.at
				FLL_MIRROR="http://sidux.office-vienna.at/sidux/debian/"
				;;
			*)
				# spline.de
				FLL_MIRROR="ftp://ftp.spline.de/pub/sidux/debian/"
				;;
		esac

		sed -i "s|\(deb.*[ \t]\)http://sidux.com/debian/|\1 ${FLL_MIRROR}|" \
			/etc/apt/sources.list \
			/etc/apt/sources.list.d/sidux.list
	fi
}

save_locale_variables() {
	for var in MIRROR FLL_MIRROR CHARMAP CODESET FONTFACE FONTSIZE \
		   XKBMODEL XKBLAYOUT XKBVARIANT XKBOPTIONS; do
		val=$(eval echo \$${var})
		echo "${var}=\"${val}\""
	done > "/etc/default/${NAME}"
}

case "${1}" in
	start)
		set_timezone
		set_locale
		set_console
		apt_install_lang
		localize_sources_list
		save_locale_variables
		;;
	stop)
		# no-op
		;;
	restart|reload|force-reload)
		echo "Error: argument '${1}' not supported" >&2
		exit 3
		;;
	localize)
		# no output
		log_daemon_msg() { :; }
		log_action_begin_msg() { :; }
		log_end_msg() { :; }
		# localize
		set_locale
		set_console
		apt_install_lang
		localize_sources_list
		save_locale_variables
		;;
	*)
		echo "Usage: ${NAME} {start|stop|list|localize}" >&2
		exit 3
		;;
esac

:
