#!/bin/sh

### BEGIN INIT INFO
# Provides:          fll-xdm
# Required-Start:    fll-adduser
# Required-Stop:
# X-Start-Before:    gdm3 kdm lightdm lxdm slim sddm wdm xdm
# Default-Start:     2 3 4 5
# Default-Stop:
# Short-Description: detect and setup X desktop manager
# Description:       The purpose of this script is to detect and configure an
#                    installed X desktop manager (i.e. sddm, kdm, gdm3 etc.).
### END INIT INFO

###
# F.U.L.L.S.T.O.R.Y init script
#
# Copyright: (C) 2007-2008 Kel Modderman <kel@otaku42.de>
# Copyright: (C) 2007-2015 Stefan Lippers-Hollmann <s.l-h@gmx.de>
# License:   GPLv2
#
# F.U.L.L.S.T.O.R.Y Project Homepage:
# http://developer.berlios.de/projects/fullstory
###

PATH=/sbin:/usr/sbin:/bin:/usr/bin
NAME="fll-xdm"

###
# source distro-defaults, no-op unless in live mode
###
FLL_DISTRO_MODE="installed"

if [ -r /etc/default/distro ]; then
	. /etc/default/distro
fi

if [ "${FLL_DISTRO_MODE}" != "live" ]; then
	exit 0
fi

###
# VERBOSE setting and other rcS variables
###
#. /lib/init/vars.sh

###
# source lsb functions
###
. /lib/lsb/init-functions

###
# source fll functions
###
. /lib/init/fll

###
# debian's default-display-manager control file
###
DEFAULT_DISPLAY_MANAGER_FILE=/etc/X11/default-display-manager

###
# cheatcode handling
###
if [ -f /proc/cmdline ]; then
	for param in $(cat /proc/cmdline); do
		case "${param}" in
			flldebug=*)
				if [ "${param#flldebug=}" = "${NAME#fll-}" ] || [ "${param#flldebug=}" = "all" ]; then
					fll_redirect
				fi
				;;
			desktop=*)
				if [ -z "${DESKTOP}" ]; then
					DESKTOP="${param#desktop=}"
				fi
				;;
			dpi=*)
				CUSTOM_DPI="${param#dpi=}"
				case "${CUSTOM_DPI}" in
					*[!0-9]*)
						CUSTOM_DPI=""
						;;
				esac
				;;
		esac
	done
fi

if [ -z "${DESKTOP}" ]; then
	[ -x "/usr/bin/icewm" ] && DESKTOP="icewm"		# sixth choice
	[ -x "/usr/bin/startfluxbox" ] && DESKTOP="fluxbox"	# fifth choice
	[ -x "/usr/bin/startlxde" ] && \
		[ -x "/usr/bin/openbox" ] && DESKTOP="lxde"	# fourth choice
	[ -x "/usr/bin/xfwm4" ] && DESKTOP="xfce"		# third choice
	[ -x "/usr/bin/metacity" ] && DESKTOP="gnome"		# second choice
	[ -x "/usr/bin/startkde" ] && DESKTOP="kde"			# first choice, if installed and desktop= is empty

	# none of the major desktop environments is installed, don't interfere 
	# with ordinary priorities.
	[ -z "${DESKTOP}" ] && exit 0
fi

setup_gdm3() {
	# autologin + greeter theme
	# timed login required for login after x restart
	sed -i	-e "/^AutomaticLogin\=.*/d" \
		-e "/^AutomaticLoginEnable\=.*/d" \
		-e "/^TimedLoginEnable\=.*/d" \
		-e "/^TimedLogin\=.*/d" \
		-e "/^TimedLoginDelay\=.*/d" \
		-e "s/^\(\[daemon\]$\)/\1\nAutomaticLogin\=${FLL_LIVE_USER}\nAutomaticLoginEnable\=true\n \
			\nTimedLoginEnable\=true\nTimedLogin\=${FLL_LIVE_USER}\nTimedLoginDelay\=1/" \
			/etc/gdm3/daemon.conf
}

setup_kdm() {
	# autologin
	echo "AUTOLOGINUSER=${FLL_LIVE_USER}"	>  /etc/default/kdm.d/autologin
	echo "AUTOLOGINAGAIN=true"		>> /etc/default/kdm.d/autologin
	echo "AUTOLOGINDELAY=0"			>> /etc/default/kdm.d/autologin

	if [ "${CUSTOM_DPI}" ]; then
		sed -i	-e "s/\(^ServerArgsLocal\=.*\)\ \-dpi[ \t]*[0-9]*\(.*$\)/\1\2/" \
			-e "s/\(^ServerArgsLocal\=.*\)\-dpi[ \t]*[0-9]*\(.*$\)/\1\2/" \
			-e "s/\(^ServerArgsLocal\=.*\) *$/\1/" \
			-e "s/^ServerArgsLocal\=.*$/& \-dpi ${CUSTOM_DPI}/" \
				/etc/kde4/kdm/kdmrc
	fi
}

setup_lightdm() {
	# set autologin user and set timeout to zero
	sed -i  -e "s/^\#autologin-user=/autologin-user=${FLL_LIVE_USER}/" \
		-e "s/^\#autologin-user-timeout=0/autologin-user-timeout=0/" \
			/etc/lightdm/lightdm.conf
}

setup_sddm() {
	printf "[Autologin]\nRelogin=true\nUser=${FLL_LIVE_USER}\n" \
		>/etc/sddm.conf
}

setup_slim() {
	# set autologin for $FLL_LIVE_USER to yes
	sed -i	-e "s/^default_user.*/\#FLL\#&/" \
		-e "s/^\#FLL\#\(default_user[ \t]*${FLL_LIVE_USER}$\)/\1/" \
		-e "s/^auto_login.*/\#FLL\#&/" \
		-e "s/^\#FLL\#\(auto_login[ \t]*yes$\)/\1/" \
			/etc/slim.conf
	grep -q ^default_user /etc/slim.conf || \
		printf "default_user\t${FLL_LIVE_USER}\n" >> /etc/slim.conf
	grep -q ^auto_login /etc/slim.conf || \
		printf "auto_login\tyes\n" >> /etc/slim.conf

	if [ "${CUSTOM_DPI}" ]; then
		sed -i	-e "s/\(^xserver_arguments.*\)\ \-dpi[ \t]*[0-9]*\(.*$\)/\1\2/" \
			-e "s/\(^xserver_arguments.*\)\-dpi[ \t]*[0-9]*\(.*$\)/\1\2/" \
			-e "s/\(^xserver_arguments.*\)/& \-dpi ${CUSTOM_DPI}/" \
				/etc/slim.conf
	fi
}

setup_x_cursor_theme() {
	if [ -e /usr/share/icons/DMZ-Black/cursor.theme ]; then
		update-alternatives --set x-cursor-theme /usr/share/icons/DMZ-Black/cursor.theme >/dev/null
	fi
}

setup_wm() {
	FLL_LIVE_USER_GROUP=$(getent passwd ${FLL_LIVE_USER} | cut -d\: -f 4)
	FLL_LIVE_USER_HOME=$(getent passwd ${FLL_LIVE_USER} | cut -d\: -f 6)

	log_daemon_msg "${NAME}"


	case "${DESKTOP}" in 
		flux*)
			WM="/usr/bin/startfluxbox"
			;;
		gnome)
			WM="/usr/bin/metacity"
			;;
		icewm)
			WM="/usr/bin/icewm"
			;;
		kde)
			WM="/usr/bin/startkde"
			;;
		lxde)	
			WM="/usr/bin/openbox"
			;;
		xfce*)
			WM="/usr/bin/xfwm4"
			;;
		*)
			log_action_msg " desktop '${DESKTOP}' is not available"
			log_end_msg 0
			return 1
			;;
	esac

	if [ -x "${WM}" ]; then
		case "${WM}" in 
			"/usr/bin/startkde")
				XSESSION="plasma"
				;;
			"/usr/bin/metacity")
				XSESSION="gnome"
				;;
			"/usr/bin/startfluxbox")
				XSESSION="fluxbox"
				;;
			"/usr/bin/xfwm4")
				XSESSION="xfce"
				;;
			"/usr/bin/icewm")
				XSESSION="IceWM"
				;;
			"/usr/bin/openbox")
				XSESSION="LXDE"
				;;
		esac

		log_action_begin_msg " setting up window manager '${WM}'"
		echo "[Desktop]"		>  ${FLL_LIVE_USER_HOME}/.dmrc
		echo "Session=${XSESSION}"	>> ${FLL_LIVE_USER_HOME}/.dmrc
		chown "${FLL_LIVE_USER}:${FLL_LIVE_USER_GROUP}" "${FLL_LIVE_USER_HOME}/.dmrc"
			
		update-alternatives --set x-window-manager "${WM}" >/dev/null
		log_end_msg "${?}"

		# configure sddm
		if [ -w /etc/sddm.conf ]; then
			sed -i "s|^Relogin=.*|&\nSession=${XSESSION}.desktop|" \
				/etc/sddm.conf
		fi
		
		return 0
	else
		log_action_msg " desktop '${DESKTOP}' is not available"
		log_end_msg 0
		return 1
	fi
}

case "${1}" in
	start)

		SLIM="$(which slim 2>/dev/null)"
		if [ "${SLIM}" ]; then
			log_daemon_msg "${NAME}"; log_action_begin_msg " configuring slim"
			setup_slim && echo "${SLIM}" > "${DEFAULT_DISPLAY_MANAGER_FILE}"
			log_end_msg "${?}"
		fi

		GDM3="$(which gdm3 2>/dev/null)"
		if [ "${GDM3}" ]; then
			log_daemon_msg "${NAME}"; log_action_begin_msg " configuring gdm3"
			setup_gdm3 && echo "${GDM3}" > "${DEFAULT_DISPLAY_MANAGER_FILE}"
			log_end_msg "${?}"
		fi

		LIGHTDM="$(which lightdm 2>/dev/null)"
		if [ "${LIGHTDM}" ]; then
			log_daemon_msg "${NAME}"; log_action_begin_msg " configuring lightdm"
			setup_lightdm && echo "${LIGHTDM}" > "${DEFAULT_DISPLAY_MANAGER_FILE}"
			log_end_msg "${?}"
		fi

		KDM="$(which kdm 2>/dev/null)"
		if [ "${KDM}" ]; then
			log_daemon_msg "${NAME}"; log_action_begin_msg " configuring kdm"
			setup_kdm && echo "${KDM}" > "${DEFAULT_DISPLAY_MANAGER_FILE}"
			log_end_msg "${?}"
		fi

		# Handle sddm last, making it the default display manager
		# ...unless overriden below
		SDDM="$(which sddm 2>/dev/null)"
		if [ "${SDDM}" ]; then
			log_daemon_msg "${NAME}"; log_action_begin_msg " configuring sddm"
			setup_sddm && echo "${SDDM}" >"${DEFAULT_DISPLAY_MANAGER_FILE}"
			log_end_msg "${?}"
		fi

		# Four desktop-managers installed, override default display manager
		# based on desktop choice cheatcode
		case "${DESKTOP}" in
			kde)
				if [ -n "${KDM}" ] || [ -n "${SDDM}" ]; then
					if [ -n "${GDM3}" ] || [ -n "${SLIM}" ] || [ -n "${LIGHTDM}" ]; then
						if [ -n "${SDDM}" ]; then
							echo "${SDDM}" >"${DEFAULT_DISPLAY_MANAGER_FILE}"
						else
							echo "${KDM}" >"${DEFAULT_DISPLAY_MANAGER_FILE}"
						fi
					fi
				fi
				;;
			gnome)
				if [ -n "${GDM3}" ]; then
					if [ -n "${SDDM}" ] || [ -n "${KDM}" ] || [ -n "${SLIM}" ] || [ -n "${LIGHTDM}" ]; then
						echo "${GDM3}" > "${DEFAULT_DISPLAY_MANAGER_FILE}"
					fi
				fi
				;;
			xfce*|lxde)
				if [ -n "${LIGHTDM}" ]; then
					if [ -n "${SDDM}" ] || [ -n "${KDM}" ] || [ -n "${GDM3}" ] || [ -n "${SLIM}" ]; then
						echo "${LIGHTDM}" > "${DEFAULT_DISPLAY_MANAGER_FILE}"
					fi
				fi
				;;
		esac

		setup_x_cursor_theme

		setup_wm
		;;
	stop)
		;;
	restart|force-reload)
		echo "Error: argument '${1}' not supported" >&2
		exit 3
		;;
	kde|gnome|flux*|xfce*|icewm|lxde)
		DESKTOP="${1}"
		setup_wm
		;;
	status)
		log_success_msg "${0} is no dÃ¦mon."
		exit 0
		;;
	*)
		echo "Usage: ${NAME} {start|stop}" >&2
		exit 3
		;;
esac

:
