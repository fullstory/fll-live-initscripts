#!/bin/dash

### BEGIN INIT INFO
# Provides:          fll-init-top
# Required-Start:    
# Required-Stop:     
# Default-Start:     S
# Default-Stop:      
# Short-Description: read in fll live specific cheatcodes at top of init
# Description:       The purpose of fll-init-top is to read in fll live
#                    specific cheatcodes before any standard iniscript is
#                    started in runlevel S.
### END INIT INFO

###
# F.U.L.L.S.T.O.R.Y init script
#
# Copyright: (C) 2007 F.U.L.L.S.T.O.R.Y Project
# License:   GPLv2
#
# F.U.L.L.S.T.O.R.Y Project Homepage:
# http://developer.berlios.de/projects/fullstory
###

PATH=/sbin:/usr/sbin:/bin:/usr/bin
NAME="fll-init-top"

###
# source distro-defaults, no-op unless in live mode
###
FLL_DISTRO_MODE="installed"

if [ -s /etc/default/distro ]; then
	. /etc/default/distro
fi

if [ "${FLL_DISTRO_MODE}" != "live" ]; then
	exit 0
fi

###
# VERBOSE setting and other rcS variables
###
#. /lib/init/vars.sh

###
# source lsb functions
###
. /lib/lsb/init-functions

###
# ANSI escape sequences (N, R, G, Y, B, M, C, W)
###
. /lib/fll/fll-init-cols

###
# cheatcode handling
###
if [ -f /proc/cmdline ]; then
	for param in $(cat /proc/cmdline); do
		case "${param}" in
			flldebug=*)
				[ "${param#flldebug=}" = "${NAME}" ] && set -x
				;;
			noagp|agp=no)
				BLACKLIST="${BLACKLIST} agp agpgart"
				;;
			blacklist=*)
				BLACKLIST="${BLACKLIST} ${param#hostname=}"
				;;
			hostname=*)
				CUSTOM_HOSTNAME="${param#hostname=}"
				;;
		esac
	done
fi

do_start() {
	###
	# custom hostname given on cmdline
	###
	if [ "${CUSTOM_HOSTNAME}" ]; then
		log_daemon_msg "${B}${NAME}${N}" "${G}setting hostame of '${Y}${CUSTOM_HOSTNAME}${G}'${N}"
		echo "${CUSTOM_HOSTNAME}" > /etc/hostname
		echo "${CUSTOM_HOSTNAME}" > /etc/mailname
		# update /etc/hosts
		sed -i '/localhost/!s/^\(127.0.0.1[ \t]\+\)\(.\+\)$/\1'"${CUSTOM_HOSTNAME}"'/' \
			/etc/hosts
		log_end_msg 0
	fi

	###
	# honour blacklist= cheatcode to disable naughty modules before udev
	###
	if [ "${BLACKLIST}" ]; then
		log_daemon_msg "${B}${NAME}${N}" "${G}blacklisting modules${N}"
		for module in ${BLACKLIST}; do
			log_progress_msg "${module}"
			echo "# added by: ${NAME}" >> /etc/modprobe.d/blacklist
			echo "blacklist ${module}" >> /etc/modprobe.d/blacklist
		done
		log_end_msg 0
	fi

	###
	# make sure capability module is loaded if present
	###
	if modprobe --ignore-install capability 2>/dev/null; then
		grep -s -q -w capability /etc/modules || echo capability >> /etc/modules
	fi
}

case "${1}" in
	start)
		do_start
		;;
	stop)
		# no-op
		;;
	restart|reload|force-reload)
		echo "Error: argument '${1}' not supported" >&2
		exit 3
		;;
	*)
		echo "Usage: ${NAME} {start|stop}" >&2
		exit 3
		;;
esac

:
